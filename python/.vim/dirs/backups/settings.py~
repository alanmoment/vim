"""
Django settings for sy_freight project.

For more information on this file, see
https://docs.djangoproject.com/en/1.7/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.7/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(__file__))
PROJECT_ROOT = os.path.abspath(os.path.join(os.path.dirname(__file__), ".."))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.7/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '%zwq(5rw4)qbl$lth8e$^6lg@wxt$$99e!9o@*p&s9wtm*4h79'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

TEMPLATE_DEBUG = True

ALLOWED_HOSTS = ['sy-freight.tw', ]

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'foundation',
    'grunt',
    'system',
    'location',
    'customer',
    'dispatch',
    'fee',
    'criteria',
    'employee',
    'car',
    # 'static_precompiler',
    # 'djangobower',
    # 'jquery',
    # 'djangular',
    # 'pipeline'
    # 'django_scss',
)

# REST framework

REST_FRAMEWORK = {
    'DEFAULT_MODEL_SERIALIZER_CLASS': (
        'rest_framework.serializers.HyperlinkedModelSerializer',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
        # 'rest_framework.permissions.IsAdminUser',
        # 'rest_framework.renderers.JSONRenderer',
        # 'rest_framework.renderers.BrowsableAPIRenderer',
        # 'rest_framework.filters.DjangoFilterBackend',
    ),
    'PAGE_SIZE': 50,
    'PAGINATE_BY': 50,
}

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
)


FIXTURE_DIRS = (
#    'fee/fixtures',
#    'system/fixtures',
#    'customer/fixtures',
)

ROOT_URLCONF = 'sy_freight.urls'

WSGI_APPLICATION = 'sy_freight.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.7/ref/settings/#databases
# SY_DB_USER=alan python manage.py runserver 192.168.1.50:8080
# os.environ.get('SY_DB_USER'),

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'sy_freight',
        'USER': os.environ['SY_DB_USER'],
        'PASSWORD': os.environ['SY_DB_PASSWORD'],
        'HOST': os.environ['SY_DB_HOST'],
        'PORT': '5432',
    }
    # 'default': {
    #     'ENGINE': 'django.db.backends.postgresql_psycopg2',
    #     'NAME': 'sy_freight',
    #     'USER': 'shengyang',
    #     'PASSWORD': 'sy97220830',
    #     'HOST': '192.168.1.30',
    #     'PORT': '5432',
    # }
    # 'default': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'syfreight',
    #     'USER': 'root',
    #     'PASSWORD': 'root',
    #     'HOST': '192.168.1.50',
    #     'PORT': '3306',
    # }
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # }
}

# Internationalization
# https://docs.djangoproject.com/en/1.7/topics/i18n/

# LANGUAGE_CODE = 'en-us'
# TIME_ZONE = 'UTC'
LANGUAGE_CODE = 'zh-TW'
TIME_ZONE = 'Asia/Taipei'
USE_I18N = True
USE_L10N = True
USE_TZ = False

TEMPLATE_DIRS = (
    os.path.join(PROJECT_ROOT, 'build/html'),
    # 'templates/dashboard',
    # 'templates/dispatch'
)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.7/howto/static-files/
BUILD_ROOT = os.path.join(BASE_DIR, 'build')
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'
# STATICFILES_STORAGE = 'pipeline.storage.PipelineCachedStorage'
STATICFILES_DIRS = (
    ("flux", os.path.join(BUILD_ROOT, 'flux')),
    ("js", os.path.join(BUILD_ROOT, 'js')),
    ("jsx", os.path.join(BUILD_ROOT, 'jsx')),
    ("css", os.path.join(BUILD_ROOT, 'css')),
    ("image", os.path.join(BUILD_ROOT, 'image')),
    ("json", os.path.join(BUILD_ROOT, 'json')),
    ("jquery", 'bower_components/jquery/dist'),
    ("angular", 'bower_components/angular'),
    ("datepicker", 'bower_components/foundation-datepicker'),
    # ("furatto", 'bower_components/furatto/dist'),
    ("semantic-ui", 'bower_components/semantic-ui/dist'),
    # ("bootstrap", 'bower_components/bootstrap/dist'),
    # ("bdatepicker", 'bower_components/bootstrap-datetimepicker/build'),
    ("ckeditor", 'bower_components/ckeditor'),
    ("font-awesome", 'bower_components/font-awesome'),
    ("json-formatter", 'bower_components/json-formatter/dist'),
    ("react", 'bower_components/react'),
    ("react-router", 'bower_components/react-router'),
    ("immutable", 'bower_components/immutable/dist'),
)

# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    # 'djangular.finders.NamespacedAngularAppDirectoriesFinder', #angular
    # 'djangobower.finders.BowerFinder',
    # 'pipeline.finders.PipelineFinder',
    # 'django_scss.finders.SCSSFinder',
)


# A sample logging configuration. The only tangible logging
# performed by this configuration is to send an email to
# the site admins on every HTTP 500 error.
# See http://docs.djangoproject.com/en/dev/topics/logging for
# more details on how to customize your logging configuration.
LOGGING_DIR = os.path.join(BASE_DIR, 'storage/logs/')
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt': "%d/%b/%Y %H:%M:%S"
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': LOGGING_DIR + 'production.log',
            'formatter': 'verbose'
        },
        'null': {
            'level': 'DEBUG',
            'class': 'logging.NullHandler',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'propagate': True,
            'level': 'DEBUG',
        },
        'customer': {
            'handlers': ['file'],
            'level': 'DEBUG',
        },
        'django.request': {
            'handlers': ['mail_admins'],
            'propagate': True,
            'level': 'ERROR',
        },
    }
}
